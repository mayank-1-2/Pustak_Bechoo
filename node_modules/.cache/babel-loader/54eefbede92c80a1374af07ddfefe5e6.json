{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAYANK\\\\Desktop\\\\startup\\\\react\\\\my-app\\\\src\\\\components\\\\signup.js\";\nimport React, { Component } from 'react';\nimport './signup.css';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nconst isNumber = val => !isNaN(Number(val)); // const passwordsMatch = (val) => {\n//     return (val.password === val.conform_password);\n// };\n\n\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass signup extends Component {\n  handleSubmit(values) {\n    console.log('Current State is: ' + JSON.stringify(values));\n    alert('Current State is: ' + JSON.stringify(values)); // event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"bg-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"bg-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"firstname\",\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".firstname\",\n      id: \"firstname\",\n      name: \"firstname\",\n      placeholder: \"First Name\",\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".firstname\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: 'Must be greater than 2 characters',\n        maxLength: 'Must be 15 characters or less'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"lastname\",\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".lastname\",\n      id: \"lastname\",\n      name: \"lastname\",\n      placeholder: \"Last Name\",\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".lastname\",\n      show: \"touched\",\n      messages: {\n        required: 'Required & ',\n        minLength: 'Must be greater than 2 characters & ',\n        maxLength: 'Must be 15 characters or less & '\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"telnum\",\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, \"Contact Number\"), /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".telnum\",\n      id: \"telnum\",\n      name: \"telnum\",\n      placeholder: \"Phone Number\",\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(10),\n        maxLength: maxLength(10),\n        isNumber\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".telnum\",\n      show: \"touched\",\n      messages: {\n        required: 'Required & ',\n        minLength: 'Must be Exact 10 digit & ',\n        maxLength: 'Must be Exact 10 digit & ',\n        isNumber: 'Must be a number '\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"email\",\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".email\",\n      id: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      className: \"form-control\",\n      validators: {\n        required,\n        validEmail\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".email\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        validEmail: 'Invalid Email Address'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"password\",\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.password, {\n      model: \".password\",\n      id: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      className: \"form-control\",\n      validators: {\n        required\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".conform_password\",\n      show: \"touched\",\n      messages: {\n        required: 'Required & '\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"conform_password\",\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.password, {\n      model: \".conform_password\",\n      id: \"conform_password\",\n      name: \"conform_password\",\n      placeholder: \"conform_password\",\n      className: \"form-control\",\n      validators: {\n        required\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".conform_password\",\n      show: \"touched\",\n      messages: {\n        required: 'Required & '\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        size: 10,\n        offset: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, \"signup\"))))));\n  }\n\n}\n\nexport default signup;","map":{"version":3,"sources":["C:/Users/MAYANK/Desktop/startup/react/my-app/src/components/signup.js"],"names":["React","Component","Button","Row","Col","Label","Control","LocalForm","Errors","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","signup","handleSubmit","values","console","log","JSON","stringify","alert","render","size","offset"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './signup.css'\r\nimport {\r\n    Button, Row, Col, Label\r\n} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\n// const passwordsMatch = (val) => {\r\n//     return (val.password === val.conform_password);\r\n// };\r\n\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass signup extends Component {\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"bg-image\"></div>\r\n\r\n                <div class=\"bg-text\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)} >\r\n                        \r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                    placeholder=\"First Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required & ',\r\n                                        minLength: 'Must be greater than 2 characters & ',\r\n                                        maxLength: 'Must be 15 characters or less & '\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Number</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                    placeholder=\"Phone Number\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(10), maxLength: maxLength(10), isNumber\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required & ',\r\n                                        minLength: 'Must be Exact 10 digit & ',\r\n                                        maxLength: 'Must be Exact 10 digit & ',\r\n                                        isNumber: 'Must be a number '\r\n                                    }}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validEmail: 'Invalid Email Address'\r\n                                    }} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"password\" md={2}>Password</Label>\r\n                            <Col md={10}>\r\n                                <Control.password model=\".password\" id=\"password\" name=\"password\"\r\n                                    placeholder=\"password\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".conform_password\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required & ',\r\n\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"conform_password\" md={2}>Confirm Password</Label>\r\n                            <Col md={10}>\r\n                                <Control.password model=\".conform_password\" id=\"conform_password\" name=\"conform_password\"\r\n                                    placeholder=\"conform_password\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".conform_password\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required & ',\r\n\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{ size: 10, offset: 2 }}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    signup\r\n                                    </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default signup"]},"metadata":{},"sourceType":"module"}