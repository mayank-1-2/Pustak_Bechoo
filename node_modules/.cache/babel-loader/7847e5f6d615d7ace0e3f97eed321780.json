{"ast":null,"code":"import Metadata from './metadata';\nimport { checkNumberLengthForType } from './getNumberType_';\nexport default function isPossiblePhoneNumber(input, options, metadata) {\n  /* istanbul ignore if */\n  if (options === undefined) {\n    options = {};\n  }\n\n  metadata = new Metadata(metadata);\n\n  if (options.v2) {\n    if (!input.countryCallingCode) {\n      throw new Error('Invalid phone number object passed');\n    }\n\n    metadata.chooseCountryByCountryCallingCode(input.countryCallingCode);\n  } else {\n    if (!input.phone) {\n      return false;\n    }\n\n    if (input.country) {\n      if (!metadata.hasCountry(input.country)) {\n        throw new Error(\"Unknown country: \".concat(input.country));\n      }\n\n      metadata.country(input.country);\n    } else {\n      if (!input.countryCallingCode) {\n        throw new Error('Invalid phone number object passed');\n      }\n\n      metadata.chooseCountryByCountryCallingCode(input.countryCallingCode);\n    }\n  }\n\n  if (metadata.possibleLengths()) {\n    return isPossibleNumber(input.phone || input.nationalNumber, undefined, metadata);\n  } else {\n    // There was a bug between `1.7.35` and `1.7.37` where \"possible_lengths\"\n    // were missing for \"non-geographical\" numbering plans.\n    // Just assume the number is possible in such cases:\n    // it's unlikely that anyone generated their custom metadata\n    // in that short period of time (one day).\n    // This code can be removed in some future major version update.\n    if (input.countryCallingCode && metadata.isNonGeographicCallingCode(input.countryCallingCode)) {\n      // \"Non-geographic entities\" did't have `possibleLengths`\n      // due to a bug in metadata generation process.\n      return true;\n    } else {\n      throw new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\n    }\n  }\n}\nexport function isPossibleNumber(nationalNumber, isInternational, metadata) {\n  switch (checkNumberLengthForType(nationalNumber, undefined, metadata)) {\n    case 'IS_POSSIBLE':\n      return true;\n    // case 'IS_POSSIBLE_LOCAL_ONLY':\n    // \treturn !isInternational\n\n    default:\n      return false;\n  }\n}","map":{"version":3,"sources":["../source/isPossibleNumber_.js"],"names":["options","metadata","input","isPossibleNumber","checkNumberLengthForType"],"mappings":"AAAA,OAAA,QAAA,MAAA,YAAA;AACA,SAAA,wBAAA,QAAA,kBAAA;AAEA,eAAe,SAAA,qBAAA,CAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EACf;AACC;AACA,MAAIA,OAAO,KAAX,SAAA,EAA2B;AAC1BA,IAAAA,OAAO,GAAPA,EAAAA;AACA;;AAEDC,EAAAA,QAAQ,GAAG,IAAA,QAAA,CAAXA,QAAW,CAAXA;;AAEA,MAAID,OAAO,CAAX,EAAA,EAAgB;AACf,QAAI,CAACE,KAAK,CAAV,kBAAA,EAA+B;AAC9B,YAAM,IAAA,KAAA,CAAN,oCAAM,CAAN;AACA;;AACDD,IAAAA,QAAQ,CAARA,iCAAAA,CAA2CC,KAAK,CAAhDD,kBAAAA;AAJD,GAAA,MAKO;AACN,QAAI,CAACC,KAAK,CAAV,KAAA,EAAkB;AACjB,aAAA,KAAA;AACA;;AACD,QAAIA,KAAK,CAAT,OAAA,EAAmB;AAClB,UAAI,CAACD,QAAQ,CAARA,UAAAA,CAAoBC,KAAK,CAA9B,OAAKD,CAAL,EAAyC;AACxC,cAAM,IAAA,KAAA,CAAA,oBAAA,MAAA,CAA8BC,KAAK,CAAzC,OAAM,CAAA,CAAN;AACA;;AACDD,MAAAA,QAAQ,CAARA,OAAAA,CAAiBC,KAAK,CAAtBD,OAAAA;AAJD,KAAA,MAKO;AACN,UAAI,CAACC,KAAK,CAAV,kBAAA,EAA+B;AAC9B,cAAM,IAAA,KAAA,CAAN,oCAAM,CAAN;AACA;;AACDD,MAAAA,QAAQ,CAARA,iCAAAA,CAA2CC,KAAK,CAAhDD,kBAAAA;AACA;AACD;;AAED,MAAIA,QAAQ,CAAZ,eAAIA,EAAJ,EAAgC;AAC/B,WAAOE,gBAAgB,CAACD,KAAK,CAALA,KAAAA,IAAeA,KAAK,CAArB,cAAA,EAAA,SAAA,EAAvB,QAAuB,CAAvB;AADD,GAAA,MAEO;AACN;AACA;AACA;AACA;AACA;AACA;AACA,QAAIA,KAAK,CAALA,kBAAAA,IAA4BD,QAAQ,CAARA,0BAAAA,CAAoCC,KAAK,CAAzE,kBAAgCD,CAAhC,EAA+F;AAC9F;AACA;AACA,aAAA,IAAA;AAHD,KAAA,MAIO;AACN,YAAM,IAAA,KAAA,CAAN,gGAAM,CAAN;AACA;AACD;AACD;AAED,OAAO,SAAA,gBAAA,CAAA,cAAA,EAAA,eAAA,EAAA,QAAA,EAAqE;AAC3E,UAAQG,wBAAwB,CAAA,cAAA,EAAA,SAAA,EAAhC,QAAgC,CAAhC;AACC,SAAA,aAAA;AACC,aAAA,IAAA;AACD;AACA;;AACA;AACC,aAAA,KAAA;AANF;AAQA","sourcesContent":["import Metadata from './metadata'\r\nimport { checkNumberLengthForType } from './getNumberType_'\r\n\r\nexport default function isPossiblePhoneNumber(input, options, metadata)\r\n{\r\n\t/* istanbul ignore if */\r\n\tif (options === undefined) {\r\n\t\toptions = {}\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tif (options.v2) {\r\n\t\tif (!input.countryCallingCode) {\r\n\t\t\tthrow new Error('Invalid phone number object passed')\r\n\t\t}\r\n\t\tmetadata.chooseCountryByCountryCallingCode(input.countryCallingCode)\r\n\t} else {\r\n\t\tif (!input.phone) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif (input.country) {\r\n\t\t\tif (!metadata.hasCountry(input.country)) {\r\n\t\t\t\tthrow new Error(`Unknown country: ${input.country}`)\r\n\t\t\t}\r\n\t\t\tmetadata.country(input.country)\r\n\t\t} else {\r\n\t\t\tif (!input.countryCallingCode) {\r\n\t\t\t\tthrow new Error('Invalid phone number object passed')\r\n\t\t\t}\r\n\t\t\tmetadata.chooseCountryByCountryCallingCode(input.countryCallingCode)\r\n\t\t}\r\n\t}\r\n\r\n\tif (metadata.possibleLengths()) {\r\n\t\treturn isPossibleNumber(input.phone || input.nationalNumber, undefined, metadata)\r\n\t} else {\r\n\t\t// There was a bug between `1.7.35` and `1.7.37` where \"possible_lengths\"\r\n\t\t// were missing for \"non-geographical\" numbering plans.\r\n\t\t// Just assume the number is possible in such cases:\r\n\t\t// it's unlikely that anyone generated their custom metadata\r\n\t\t// in that short period of time (one day).\r\n\t\t// This code can be removed in some future major version update.\r\n\t\tif (input.countryCallingCode && metadata.isNonGeographicCallingCode(input.countryCallingCode)) {\r\n\t\t\t// \"Non-geographic entities\" did't have `possibleLengths`\r\n\t\t\t// due to a bug in metadata generation process.\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\tthrow new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isPossibleNumber(nationalNumber, isInternational, metadata) {\r\n\tswitch (checkNumberLengthForType(nationalNumber, undefined, metadata)) {\r\n\t\tcase 'IS_POSSIBLE':\r\n\t\t\treturn true\r\n\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\r\n\t\t// \treturn !isInternational\r\n\t\tdefault:\r\n\t\t\treturn false\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}